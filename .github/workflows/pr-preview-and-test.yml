name: PR Preview & E2E Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          PREVIEW_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview-url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = '${{ steps.deploy.outputs.preview-url }}';
            const comment = `🚀 **Preview deployment ready!**
            
            📋 **Preview URL:** ${previewUrl}
            
            🧪 **Test the following flows:**
            - Upload PDF functionality
            - Chat interface
            - Legal help categories
            - Document analysis
            
            🔍 E2E tests will run automatically against this preview.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  e2e-tests:
    needs: deploy-preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.deploy-preview.outputs.preview-url }}
        run: npx playwright test

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Comment PR with Test Results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let testStatus = '${{ job.status }}';
            let emoji = testStatus === 'success' ? '✅' : '❌';
            let statusText = testStatus === 'success' ? 'All tests passed!' : 'Some tests failed';
            
            const comment = `${emoji} **E2E Test Results: ${statusText}**
            
            📊 **Test Summary:**
            - Preview URL: ${{ needs.deploy-preview.outputs.preview-url }}
            - Status: ${testStatus}
            
            📋 **Tested Features:**
            - ✅ Navigation between pages
            - ✅ Upload page functionality
            - ✅ Chat interface
            - ✅ File upload modal
            - ✅ Responsive design
            
            📁 [View detailed test report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  lighthouse-audit:
    needs: deploy-preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ needs.deploy-preview.outputs.preview-url }}
            ${{ needs.deploy-preview.outputs.preview-url }}/upload
            ${{ needs.deploy-preview.outputs.preview-url }}/chat
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  merge-gate:
    needs: [deploy-preview, e2e-tests, lighthouse-audit]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check all tests passed
        run: |
          if [[ "${{ needs.e2e-tests.result }}" != "success" ]]; then
            echo "❌ E2E tests failed - blocking merge"
            exit 1
          fi
          
          if [[ "${{ needs.lighthouse-audit.result }}" != "success" ]]; then
            echo "❌ Lighthouse audit failed - blocking merge"
            exit 1
          fi
          
          echo "✅ All checks passed - ready to merge!"
